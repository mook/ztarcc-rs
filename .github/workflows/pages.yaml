name: Deploy to GitHub Pages
on:
  push: { branches: [main] }
  workflow_dispatch: {}
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: false # Just prevent concurrent queued runs
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        submodules: true
    - uses: actions/cache/restore@v4
      id: cache
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install rust
      run: |
        rustup update stable
        rustup default stable
        rustup target add wasm32-unknown-unknown
        cargo install wasm-bindgen-cli
    - run: cargo fmt --check
    - run: cargo test --locked
    - run: cargo build --locked --features cli
    - run: >-
        cargo rustc
        --lib --release --crate-type=cdylib --features=wasm
        --target=wasm32-unknown-unknown
    - run: >-
        wasm-bindgen --out-dir pkg --target web --no-typescript
        target/wasm32-unknown-unknown/release/ztarcc_rs.wasm
    - run: cp html/* pkg/
    - uses: actions/configure-pages@v5
    - uses: actions/upload-pages-artifact@v3
      with:
        path: pkg/
    - id: deployment
      uses: actions/deploy-pages@v4
    - uses: actions/cache/save@v4
      if: always()
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ steps.cache.outputs.cache-primary-key }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
